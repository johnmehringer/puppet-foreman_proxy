# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----

# ---- original file header ----
#
# @summary
#   Validate whether a Foreman Smart Proxy feature is configured for http, https or both
#
#
Puppet::Functions.create_function(:'foreman_proxy::validate_listen_on') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    

    valid_values = ['http', 'https', 'both']

    unless args.length > 0 then
      raise Puppet::ParseError, ("validate_listen_on(): wrong number of arguments (#{args.length}; must be > 0)")
    end

    args.each do |arg|
      candidates = args

      unless arg.is_a?(Array) then
        candidates = Array.new(1,arg)
      end

      candidates.each do |value|
        unless valid_values.include? value
          raise Puppet::ParseError, ("#{value.inspect} is not a valid value.  Valid values are: #{valid_values.map(&:to_s).uniq.join(", ")}")
        end
      end
    end
  
  end
end
